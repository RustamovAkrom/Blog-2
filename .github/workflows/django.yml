name: Django CI

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - name: Check out the repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install OpenSSL
      run: sudo apt-get install openssl

    - name: Generate private and public keys
      run: |
        mkdir -p security
        openssl genpkey -algorithm RSA -out security/private_key.pem -pkeyopt rsa_keygen_bits:2048
        openssl rsa -pubout -in security/private_key.pem -out security/public_key.pem
        echo "Private key saved as security/private_key.pem"
        echo "Public key saved as security/public_key.pem"

    - name: Create .env file
      run: |
        echo PRIVATE_KEY_PATH=$(pwd)/security/private_key.pem >> .env
        echo PUBLIC_KEY_PATH=$(pwd)/security/public_key.pem >> .env

    - name: Check if .env has been updated
      run: |
        cat .env

    - name: Clean up keys (Optional)
      run: |
        if [ -d "security" ]; then
          rm -rf security
          echo "Keys removed after use."
        else
          echo "No keys to remove."
        fi

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-${{ matrix.python-version }}-pip-

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Tests
      run: |
        python manage.py test
